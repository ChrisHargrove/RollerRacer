////////////////////////////////////////////////////////////
// State.h
// Author - Chris Hargrove
// Date   - 23/03/2018
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
/// Base abstract class for creating game states.
////////////////////////////////////////////////////////////
class State
{
public:
    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// initialise the state.
    ////////////////////////////////////////////////////////////
    virtual bool Initialize() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// process the input.
    ////////////////////////////////////////////////////////////
    virtual void Input() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// calculate all updates and apply them.
    /// --delta-- Time elapsed since last frame.
    ////////////////////////////////////////////////////////////
    virtual void Update(float delta) = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// render everything in the game
    ////////////////////////////////////////////////////////////
    virtual void Render() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// release the states resource memory
    ////////////////////////////////////////////////////////////
    virtual bool Shutdown() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// state what happens when paused
    ////////////////////////////////////////////////////////////
    virtual void Pause() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// restart state after pause
    ////////////////////////////////////////////////////////////
    virtual void Resume() = 0;

    ////////////////////////////////////////////////////////////
    /// Pure Virtual function to be overridden which will
    /// return the states pause value
    ////////////////////////////////////////////////////////////
    virtual bool IsPaused() = 0;

protected:
    ////////////////////////////////////////////////////////////
    // Member Variables
    ////////////////////////////////////////////////////////////
    bool _IsPaused;
};

